***************************************************************************************
需求：新浪上有多个新闻标题，如果我想把很多的新闻标题设置为红色，原来的实现是每一个标题都要设置font
<html>
    <head>
        <meta http-equiv="content-type" content="text/html;charset=utf-8">
        <title>无标题标签</title>
    </head>
    <body>
        <a href="#"><font size="30" color="red">新闻的标题1</font></a><br/>
        <a href="#"><font size="30" color="red">新闻的标题2</font></a><br/>
        <a href="#"><font size="30" color="red">新闻的标题3</font></a><br/>
        <a href="#"><font size="30" color="red">新闻的标题4</font></a><br/>
    </body>
</html>
如果是很多标题，重复工作比较多，并且后期有变化维护起来很困难，所以引入了css的概念
*************************************************************************************
<html>
    <head>
        <style type="text/css">
        <!--去掉下划线-->
            a {
                color:red;
                text-decoration: none;
            }
        </style>
        <meta http-equiv="content-type" content="text/html;charset=utf-8">
        <title>无标题标签</title>
    </head>
    <body>
        <a href="#">新闻的标题1</a><br/>
        <a href="#">新闻的标题2</a><br/>
        <a href="#">新闻的标题3</a><br/>
        <a href="#">新闻的标题4</a><br/>
    </body>
</html>
*****************************************************************
html：在一个网页中负责一个页面的结构
css： 层叠样式表，在一个网页中负责一个页面的数据样式
编写CSS代码的方式：
    第一种：在style标签中
        格式：
            <style type="text/css">
               编写CSS代码
            </style>
        例子
            a {
                color:red;
                text-decoration: none;
            }      
            
    第二种：可以引入外部的CSS文件
	方式一： 使用link标签
		格式： <link href=“css文件的路径” rel=“stylesheet” />
		例子：<link href="新闻标题的颜色.css" rel="stylesheet" >
	方式二：使用style
		格式：
			<style type=“text/css”>
				@import url(“css文件的路径”);
			</style>
		例子：
        		<style type="text/css"> 
            			@import url("新闻标题的颜色.css");
        		</style>		
   第三种：直接在html标签使用style属性编写
	例子：
		<a style="color:red; text-decoration:none" href="#">新闻的标题1</a><br/>
********************************************************
方式二第一种：link
******************************************************
新闻标题的颜色.css
@charset "utf-8";
a{
    color:red;
    text-decoration:none;
}

linkcss.html
<html>
    <head>
        <link href="新闻标题的颜色.css" rel="stylesheet" >
        <meta http-equiv="content-type" content="text/html;charset=utf-8" >
        <title>无标题标签</title>
    </head>
    <body>
        <a href="#">新闻的标题1</a><br/>
        <a href="#">新闻的标题2</a><br/>
        <a href="#">新闻的标题3</a><br/>
        <a href="#">新闻的标题4</a><br/>
    </body>
</html>


方式二第二种：style
stylecss.html
<html>
    <head>
        <style type="text/css"> 
            @import url("新闻标题的颜色.css");
        </style>
        <meta http-equiv="content-type" content="text/html;charset=utf-8" >
        <title>无标题标签</title>
    </head>
    <body>
        <a href="#">新闻的标题1</a><br/>
        <a href="#">新闻的标题2</a><br/>
        <a href="#">新闻的标题3</a><br/>
        <a href="#">新闻的标题4</a><br/>
    </body>
</html>

方式三：直接在html标签使用style属性编写
Stylehtml.html
<html>
    <head>
        <meta http-equiv="content-type" content="text/html;charset=utf-8" >
        <title>无标题标签</title>
    </head>
    <body>
        <a style="color:red; text-decoration:none" href="#">新闻的标题1</a><br/>
        <a style="color:red; text-decoration:none" href="#">新闻的标题2</a><br/>
        <a style="color:red; text-decoration:none" href="#">新闻的标题3</a><br/>
        <a style="color:red; text-decoration:none" href="#">新闻的标题4</a><br/>
    </body>
</html>
************************************************************************************
第三种：最不适用，只能用于本标签中，复用性差，不推荐使用
第一种：只能用于本页面中，复用性不强
第二种：推荐使用，link，style两种，link更简单，推荐使用link方式
Css的注释：
/*
*/
*********************************************************************************
选择器：
<html>
    <head>
        <style type="text/css">
        /*
            选择器：选择器就是找到对应的数据进行样式化
                1.标签选择器：就是找到所有指定的标签进行样式化
                    格式：
                        标签名 {
                            样式1；
                            样式2；
                            ...
                        }
                    例子：
                        div{
                            color:red;
                            text-decoration: none;
                        }
                2.类选择器：使用类选择器，首先要给我们的html指定对应的class属性值
                    格式：
                        .class{
                            样式1；
                            样式2；
                        }
                    类选择器注意：
                        1-html的class属性名，字母，数字，下划线都可以，但是不能以数字开头
                        2-类选择器的样式优先于标签选择器的样式
                3.ID选择器：首先给html元素添加一个id属性
                        格式：
                            #id的属性值{
                                样式1；
                                样式2；
                            }
                        注意：
                            1-id选择器的样式优先于类选择器，标签选择器的样式
                            2-html的id属性名，字母，数字，下划线都可以，但是不能以数字开头
                            3-id选择器在html中只出现一次，为了保证id的唯一性
                4.交集选择器:就是对选择器1中的选择器2中的数据样式化
                        格式：
                            选择器1 选择器2{
                                样式1；
                                样式2；
                            }
                            
                5.并集选择器：就是对指定的选择器进行统一的样式化
                        格式：
                            选择器1，选择器2{
                                样式1；
                                样式2；
                            }
                6.通用选择器：通配符
                *{
                    样式1；
                    样式2；
                }
        */
            div{
                color:red;
                text-decoration: none;
            }
            .two{
                background-color: black;
                color:grey;
                font-size:24px;
            }
            a{
                color:green;
                text-decoration: none;
            }
            #one{
                background-color: blue;
                color:brown;
                font-size:30px;
                font-weight: 500;
            }
            .test{
                background-color:cornsilk;
                color:black;
                font-size:40px;
                font-weight: 500;
            }
            div span{
                background-color: white;
            }
            div,a{
                border-color:darkgreen;
                border-style: solid;
            }
            *{
                text-decoration: line-through;
                color:darkmagenta;
            }
        </style>
        <meta http-equiv="content-type" content="text/html;charset=utf-8" >
        <title>无标题标签</title>
    </head>
    <body>
        <div>这是<span>第一个div标签</span></div>
        <div class="two">这是<span>第二个div标签</span></div>
        <div>这是<span>第三个div标签</span></div>
        <a class="two" href="#">新闻标题1</a><br/>
        <a href="#">新闻标题2</a><br/>
        <a id="one" class="test" href="#">新闻标题3</a><br/>
        <span>这是一个span标签</span>
    </body>
</html>
**********************************************************************
伪类选择器：
<html>
    <head>
        <style type="text/css">
        /*
            伪类选择器：就是对元素处于某种状态下进行样式化
                a:link {color: #FF0000}		未访问的链接 
                a:visited {color: #00FF00}	 已访问的链接 
                a:hover {color: #FF00FF}	 鼠标移动到链接上 
                a:active {color: #0000FF}	 选定的链接,按下没有松手的状态

                格式：

        */
        a:link{color:red}
        a:visited{color:green}
        a:hover{color:yellow;font-size:24px}
        a:active{color:darkorchid}

        </style>
        <meta http-equiv="content-type" content="text/html;charset=utf-8">
        <title>无标题标签</title>
    </head>
    <body>
        <a href="http://www.baidu.com">百度</a>
    </body>
</html>
*****************************************************
常用的CSS样式：
https://www.w3school.com.cn/css/index.asp

解决Windows VSCode 1.36 不能智能提示CSS或者HTML的办法：
设置 -> 搜索prevent -> 把Snippets Prevent Quick Suggestions 勾掉即可

****************************************************************
Auto close tag:
    "css.remoteStyleSheets": [
        "https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css"
    ],
    "auto-close-tag.SublimeText3Mode": true,
    "auto-close-tag.enableAutoCloseTag": true,
    "auto-close-tag.enableAutoCloseSelfClosingTag": true,
    "auto-close-tag.activationOnLanguage": [
        "xml",
        "php",
        "blade",
        "ejs",
        "jinja",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "plaintext",
        "markdown",
        "vue",
        "liquid",
        "erb",
        "lang-cfml",
        "cfml",
        "HTML (Eex)",
        "c++",
        "java",
        "python"
    ],
    "auto-close-tag.excludedTags": [
        "area",
        "base",
        "br",
        "col",
        "command",
        "embed",
        "hr",
        "img",
        "input",
        "keygen",
        "link",
        "meta",
        "param",
        "source",
        "track",
        "wbr"
    ],
    "auto-close-tag.fullMode":true,
**************************************************************************
至此，windows VSCode 1.36 中html中的style仍然不好用
所以我要通过link方式嵌入css文件
**********************************************************
常用的CSS样式.css

body {
    /* 设置背景颜色 */
    background-color: grey;
    /* 设置背景图片 */
    background-image: url(sunli.jpg);
    /* 设置背景图片是否重复 */
    background-repeat: no-repeat;
    /*设置背景图片的位置，第一个参数是左上角的左边距，第二个参数是左上角的上边距*/
    background-position: 400px 100px;
}


/*操作文本的样式*/

div {
    /*设置文本的颜色*/
    color: red;
    /*设置文本的方向，居哪边对齐*/
    direction: rtl;
    line-height: 40px;
    font-size: 20px;
    letter-spacing: 5px;
    text-align: center;
    text-decoration: line-through;
    text-indent: 50px;
    text-transform: uppercase;
}

常用的CSS样式.html

<html>
    <head>
        <link ref="stylesheet" href="常用的CSS样式.css" type="text/css">
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <title>无标题标签</title>
    </head>
    <body>
        <div>
            <pre>
                   七步诗
            煮豆燃豆萁，豆在釜中泣。
            本是同根生，相煎何太急。
            </pre><br/>
            hello world
        </div>
    </body>
</html>
*************************************************************************************
操作表格的属性.css

table {
    /*合并表格的边框*/
    border-collapse: collapse;
    /*设置单元格的边框与表格的距离*/
    border-spacing: 10px 5px;
    /*设置标题的对齐方式*/
    caption-side: bottom;
    table-layout: fixed;
}

操作表格的属性.html

<html>
    <head>
        <link type="text/css" href="操作表格的属性.css" ref="stylesheet">
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <title>无标题标签</title>
    </head>
    <body>
        <table align="center" border="lpx" bordercolor="blue" width="400px" height="300px">
            <caption>人品表</caption>
            <thead>
                <tr align="center">
                    <th>姓名</th>
                    <th>成绩</th>
                    <th>人品</th>
                </tr>
            </thead>
            <tbody>
            <tr align="center">
                <td>孙俪</td>
                <td>100</td>
                <td>优秀</td>
            </tr>
            <tr align="center">
                <td>蒋雯丽</td>
                <td>99</td>
                <td>良好</td>
            </tr>
            <tr align="center">
                <td rowspan="2">Celine Dion</td>
                <td>99</td>
                <td>优秀</td>
            </tr>
            <tr align="center">
                <td>98</td>
                <td>优秀</td>
            </tr>
            </tbody>
            <tfoot>
            <tr>
                <td colspan="2">综合测评</td>
                <td>优秀</td>
            </tr>
            </tfoot>
        </table>
    </body>
</html>
**************************************************************************
操作边框的属性.css

/*div默认是没有边框的，需要通过border-style来设置才会有*/

div {
    /*设置边框的颜色*/
    border-color: red green yellow blue;
    /*设置边框的样式 上右下左*/
    border-style: dotted solid double;
    width: 100px;
    height: 100px;
    border-bottom-color: red;
    border-top-width: 100px;
}

操作边框的属性.html

<html>
    <head>
        <link rel="stylesheet" type="text/css" href="操作边框的属性.css">
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <title>无标题标签</title>
    </head>
    <body>
        <div>这个是操作边框属性的例子</div>
    </body>
</html>
*****************************************************************************************
IE中有一个F12开发工具，也有检查元素
****************************************************************************************
盒子模型：

盒子模型.css

/*
盒子模型： 就是把html的边框比作了一个盒子的边界，
主要用于操作数据与边框的距离，或者边框与边框的距离
Maigin: yellow， 0， 外边距，盒子间的距离
Border:green， 3
Padding:orange , 0, 内边距， 可以修改
data area:light blue， 100x100

盒子模型主要用于操作内边距（padding）和外边距（margin）的
*/

div {
    border-style: solid;
    width: 100px;
    height: 100px;
    padding-left: 10px;
    padding-top: 20px;
    padding-right: 10px;
}

.one {
    margin-bottom: 10px;
}

.two {
    margin-left: 400px;
}

盒子模型.html

<html>
    <head>
        <link rel="stylesheet" type="text/css" href="盒子模型.css">
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <title>无标题标签</title>
    </head>
    <body>
        <div class="one">这个是盒子模型的例子1</div>
        <div class="two">这个是盒子模型的例子2</div>
    </body>
</html>
**********************************************************************************
QQ登陆页面
**********************************************************************************
/*
QQ登陆模型
*/

盒子模型QQ登陆.css

.outer {
    border-style: solid;
    width: 350px;
    height: 200px;
    margin-top: 100px;
    margin-left: 200px;
    background-image: url("qq.jpg");
    background-repeat: no-repeat;
    background-position: center;
}

.username {
    margin-top: 50px;
    margin-left: 80px;
}

.password {
    margin-top: 20px;
    margin-left: 80px;
}

input {
    border-color: blue;
    border-width: 3px;
}

#button {
    margin-left: 120px;
}


盒子模型QQ登陆.html

<html>
    <head>
        <link rel="stylesheet" type="text/css" href="盒子模型QQ登陆.css">
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <title>无标题标签</title>
    </head>
    <body>
        <div class="outer">
            <div class="username">
            用户名：<input name="username" type="text"/>
            </div>
            <div class="password">
            密&nbsp;&nbsp;&nbsp;&nbsp;码：<input name="password" type="password"/>
            </div>
            <div class="login">
            <input id="button" type="submit" value="登陆"/>   
            </div>
        </div>
    </body>
</html>
************************************************************************************************
定位
************************************************************************************************
定位.css

/*
css的定位：
    相对定位：相对定位是相对于元素原来的位置进行移动的
        使用方式：position: relative;
        例子：
            position: relative;
            top: 10px;
            left: 10px;
    绝对定位：绝对定位是相对于整个页面而言
        使用方式: position: absolute;
        例子：
            position: absolute;
            top: 280px;
            left: 380px;
    固定定位：固定定位是相对于整个浏览器而言的
        使用方式：position: fixed;
        例子：    
            position: fixed;
            top: 500px;
            left: 1000px;
*/

div {
    border-style: solid;
    width: 100px;
    height: 100px;
}

.one {
    background-color: red;
}

.two {
    background-color: blue;
    position: relative;
    top: 10px;
    left: 10px;
}

.three {
    background-color: green;
}

#ad {
    width: 100px;
    height: 100px;
    font-size: 20px;
    color: red;
    position: absolute;
    top: 280px;
    left: 380px;
}

#sunli {
    width: 100px;
    height: 100px;
    position: fixed;
    top: 500px;
    left: 1000px;
}

定位.html
<html>
    <head>
        <link rel="stylesheet" type="text/css" href="定位.css">
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <title>无标题标签</title>
    </head>
    <body>
        <div class="one">one</div>
        <div class="two">two</div>
        <div class="three">three</div>
        <div id="ad">
            <marquee scollamount="30">广告</marquee>
        </div>
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
                目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
                目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
                目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
                目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
                目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        目前正在学习定位。。。。。。目前正在学习定位。。。。。。
        <div id="sunli">
            <img src="sunli.jpg" />
        </div>
    </body>
</html>
**************************************************************************************

html:负责一个页面的结构
css：负责一个页面的样式
javascript：负责与用户进行交互
	表单中信息填写后会提示错误

javascript的历史：
网速很慢的时候，没有javascript只有提交表单到服务器后才能反馈填写的信息是否符合要求
商机：
	微软:盖茨认为未来是“视窗”的世界
	网景（Mozilla）：1995年推出了，浏览器（导航者）和livescript（检验功能），非常受欢迎
		和sun公司合作，使用了java的名字，把livescript改名为javascript，占了70%的浏览器市场份额。一款浏览器45美元
		一年后上市，并且股价超过了微软
		盖茨找网景的老大谈合作，不同意合并
		盖茨一年投了20亿美元去开发JScript（高薪挖网景的工程师），没有什么优势，微软捆绑销售+免费（不正当的商业竞争）
		1998年，网景的市场份额被IE浏览器打压，被美国在线公司收购。网景开始和微软打官司
		2003年，网景就宣布破产了。微软最终赔钱7亿左右给网景。网景拿着赔的钱中的2000万美金成立了一个基金会（Mozilla）（谋职），
		把浏览器的源代码全部公开。如果哪个大牛可以继续开发浏览器对抗微软，就可以从基金会里赚钱。然后firefox出来了。
		Ie浏览器用JScript, 领航者用javascript，开发者很辛苦，要解决兼容性问题。1997年，欧洲计算机协会ECMA给javascript
		规定了协议。后两项会导致浏览器之间的不兼容问题，后两项就是浏览器的特色。
			1.ECMAScript(只是规范了基本了基本的语法)
			2.BOM:浏览器对象模型
			2.DOM：文档对象模型
		
		
************************************************************************************************************************
javascript的特点：
	1.跨平台
	2.安全的（javascript不能直接访问硬盘的内容）
**********************************************************************************************
java和javascript的关系：
	1.javascript是属于网景的产品，Java属于sun公司的产品
	2.javascript是基于对象的，java是面向对象的（封装，继承，多态）
	3.javascript是解析型语言，java是解析编译型语言
	4.javascript是弱类型语言，java是强类型语言
		java声明变量要指定数据类型
		javascript不需要指定数据类型，任何的变量都使用一个关键字var去声明即可
**********************************************************************************************
如何编写javascript的代码？
**********************************************************************************************
第一个javascript程序.js
**********************************************************************************************
alert("哈哈");
document.write("这是我的第一个js代码");
**********************************************************************************************
第一个javascript程序.html
**********************************************************************************************
<html>
    <head>
        <!--如何编写javascript代码
                第一种方式：使用<script>标签体内编写
                    格式：
                        <script type="text/javascript">
                            js code;
                        </script>
                第二种方式：引入外部的javascript文件
                    格式：
                        <script src="哈哈.js" type="text/javascript">
                        </script>
                    注意：
                    1.script有close tag
                    2.标签体不能写内容，如果想加内容，可以再加一个<script>添加语句
                
            javascript常用的函数：
                alert（""）；弹出框
                document.write("") 向页面输出数据
        -->
        <!-- 第一种方式：<script>
        <script type="text/javascript">
            alert("哈哈");
        </script>
        -->
        <!--第二种方式：引入外部的javascript文件：推荐，因为复用性好
        <script src="哈哈.js" type="text/javascript">
        </script>
        -->
        <script src="哈哈.js" type="text/javascript">
        </script>
        <meta http-equiv="content-type" content="text/html;charset=utf-8">
        <title>无标题标签</title>
    </head>
    <body>
    </body>
</html>

注释区别：
   html的注释：<!---->
   css的注释：/**/
  	js的注释：
       // 单行注释
      /**/ 多行注释

*****************************************************************
声明变量
**********************************************************************************************
声明变量.js
**********************************************************************************************
/*
js的变量声明：
    格式：
        var 变量名 = 数据；
    注意：
        1.javascript不需要指定数据类型，任何的变量都使用一个关键字var去声明即可，可以存储任意类型的数据
        2.javascript中变量的数据类型是根据存储的值决定的，可以随时更改存储数据的类型
        3.定义了多个同名的变量，后定义的同名变量会覆盖之前定义的变量
        4.声明变量时，可以省略var，但是不建议省略
        5.如果语法有错，不会报错，只不过不显示出错语句的结果，可以安装DOM（IE浏览器开发人员工具不用安装，控制台）

javascript的数据类型：
    关键字typeof 查看变量的数据类型
        使用格式： typeof 变量名
        number 小数和整数
        string 单引号和多引号都可以，javascript没有字符的概念
        boolean  布尔数据类型
        undefined 没有定义的变量
*/
var a = 10;
a = true;
document.write("a="+a+",数据类型是"+(typeof a)+"<br/>");

var b = "hello world";
var b = "how are you";
document.write("b="+b+",数据类型是"+(typeof b)+"<br/>");
var c = 3.04;
document.write("c="+c+",数据类型是"+(typeof c)+"<br/>");
d = 5.8;
document.write("d="+d+",数据类型是"+(typeof d)+"<br/>");
var e = 'a';
document.write("e="+e+",数据类型是"+(typeof e)+"<br/>");
document.write("f数据类型是"+(typeof f)+"<br/>");
/*
result：
a=true,数据类型是boolean
b=how are you,数据类型是string
c=3.04,数据类型是number
d=5.8,数据类型是number
e=a,数据类型是string
f数据类型是undefined
*/
**********************************************************************************************
声明变量.html
**********************************************************************************************
<html>
    <head>
        <!---->
        <script src="声明变量.js" type="text/javascript">
        </script>
        <meta http-equiv="content-type" content="text/html;charset=utf-8">
        <title>无标题标签</title>
    </head>
    <body>
    </body>
</html>
**********************************************************************************************
字符串转换为数字
**********************************************************************************************
字符串转换为数字.js
**********************************************************************************************
/*
我们从网上拿的一般是字符串（表单或者抓取的），如果需要元素，需要转化为数字才可以
字符串转数字：
    parseInt()
    parseFloat()

parseInt方法如果接收的字符串含有非数字的字符，那么parseInt方法会从字符串的首个字符开始查找，
一直知道非数字字符为止，然后使用前面的数字字符转换为数字
如果首位是0，先去除0，在进行转化
如果首位是0x，会把字符串当成16进制的数进行转换
*/
var a = "12";
var result1 = parseInt(a);
document.write(result1+1+"<br/>");//如果是字符串结果是121，如果是数字就是13
document.write(result1+"<br/>");//12
document.write((typeof result1)+"<br/>");//number

var b = "12.34";
var result2 = parseInt(b);
document.write(result2+"<br/>");// 12，舍弃了小数点和小数点后面的数字
document.write((typeof result2)+"<br/>");// number

var c = "1234abc1234";
var result3 = parseInt(c);
document.write(result3+"<br/>");// 1234，舍弃了非数字字符串和非数字字符串后面的数字
document.write((typeof result3)+"<br/>");// number

var d = "abc1234";
var result4 = parseInt(d);
document.write(result4+"<br/>");// NaN，not a nuber
document.write((typeof result4)+"<br/>");// number

var e = "012";
var result5 = parseInt(e);
document.write(result5+"<br/>");// 12
document.write((typeof result5)+"<br/>");// number

var f = "0x12";
var result6 = parseInt(f);
document.write(result6+"<br/>");// 18
document.write((typeof result6)+"<br/>");// number
**********************************************************************************************
字符串转换为数字.html
**********************************************************************************************
<html>
    <head>
        <!---->
        <script src="字符串转换为数字.js" type="text/javascript">
        </script>
        <meta http-equiv="content-type" content="text/html;charset=utf-8">
        <title>无标题标签</title>
    </head>
    <body>
    </body>
</html>
**********************************************************************************************

	


