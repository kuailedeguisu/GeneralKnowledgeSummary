二维数组：
格式：
1)数据类型[][] 变量名 = new 数据类型[m][n];
m表示这个二维数组有多少个一维数组，n表示每一个一维数组的元素个数
arr[m][n]表示获取第m+1个一维数组的第n+1个元素

2)数据类型[] 数组名[] new 数据类型[m][n];
int[] x, y[];//x一维数组，二维数组
[[

3）数据类型[][] 变量名 = new 数据类型[m][];//列是变化的

4）数据类型[][] 变量名 = new 数据类型[][]{{元素...},{元素...},{元素...},...};
数据类型[][] 变量名 = {{元素...},{元素...},{元素...},...};


ex:
class Array2Demo1 {
	public static void main(String[] args) {
		int[][] arr ={{1,2,3,3},{4,5,6,6},{7,8,9,9}};

		System.out.println(arr);
		
		for (int i = 0; i < 3; ++i) {
			System.out.println(arr[i]);
		}
		
		for (int i = 0; i < 3; ++i) {
			for (int j = 0; j < 4; ++j) {
				if (j == 3) {
					System.out.println(arr[i][j]);
				} else {
					System.out.print(arr[i][j]+",");
				}
			}
		}
		System.out.println("----------------");
		
		int[][] arr1 = new int[3][4];
		for (int i = 0; i < 3; ++i) {
			for (int j = 0; j < 4; ++j) {
				if (j == 3) {
					System.out.println(arr1[i][j]);
				} else {
					System.out.print(arr1[i][j]+",");
				}
			}
		}
	}
}

result:
C:\develop\code>javac Array2Demo1.java

C:\develop\code>java Array2Demo1
[[I@24d46ca6 //二维数组的地址有[[
[I@4517d9a3  //一维数组的地址有[
[I@372f7a8d
[I@2f92e0f4
1,2,3,3
4,5,6,6
7,8,9,9
----------------
0,0,0,0
0,0,0,0
0,0,0,0



一维数组是引用，默认值是null

ex:
class Array2Demo2 {
	public static void main(String[] args) {
		int[][] arr = new int[3][];
		System.out.println(arr);
		for (int i = 0; i < 3; ++i) {
			System.out.println(arr[i]);
		}
		System.out.println("----------------");
		
		arr[0] = new int[4];
		arr[1] = new int[2];
		arr[2] = new int[5];
		System.out.println(arr);
		
		for (int i = 0; i < 3; ++i) {
			System.out.println(arr[i]);
		}
		System.out.println("----------------");
		
		System.out.print(arr[0][0]+" ");
		System.out.print(arr[0][1]+" ");
		System.out.print(arr[0][2]+" ");
		System.out.println(arr[0][3]);
		
		System.out.print(arr[1][0]+" ");
		System.out.println(arr[1][1]);
		
		System.out.print(arr[2][0]+" ");
		System.out.print(arr[2][1]+" ");
		System.out.print(arr[2][2]+" ");
		System.out.print(arr[2][3]+" ");
		System.out.println(arr[2][4]);
		
		System.out.println("----------------");
	}
}
result:
C:\develop\code>javac Array2Demo2.java

C:\develop\code>java Array2Demo2
[[I@24d46ca6
null
null
null
----------------
[[I@24d46ca6
[I@4517d9a3
[I@372f7a8d
[I@2f92e0f4
----------------
0 0 0 0
0 0
0 0 0 0 0
----------------

二维数组的第一个必须给，因为不给的话，无法分配内存

二维数组遍历：
arr是一个二维数组名，arr.length是计算二维数组有多少个一维数组，arr[i].length是计算一维数组arr[i]有多少个元素

ex:
class Array2Demo4 {
	public static void main(String[] args) {
		int[][] arr = {{1,2,3,4}, {5,6,7,8}, {9,10,11,12}};
		System.out.println(arr);
		for (int i = 0; i < arr.length; ++i) {
			System.out.println(arr[i]);
		}
		
		for(int i = 0; i < arr.length; ++i) {
			for (int j = 0; j < arr[i].length; ++j) {
				if (j == arr[i].length - 1) {
					System.out.println(arr[i][j]);
				} else {
					System.out.print(arr[i][j]+",");
				}
			}
		}
	}
}
result:
C:\develop\code>javac Array2Demo4.java

C:\develop\code>java Array2Demo4
[[I@24d46ca6
[I@4517d9a3
[I@372f7a8d
[I@2f92e0f4
1,2,3,4
5,6,7,8
9,10,11,12

ex:
class Array2Demo4 {
	public static void main(String[] args) {
		int[][] arr = {{1,2,3,4}, {5,6,7}, {9,10}};
		System.out.println(arr);
		for (int i = 0; i < arr.length; ++i) {
			System.out.println(arr[i]);
		}
		
		for(int i = 0; i < arr.length; ++i) {
			for (int j = 0; j < arr[i].length; ++j) {
				if (j == arr[i].length - 1) {
					System.out.println(arr[i][j]);
				} else {
					System.out.print(arr[i][j]+",");
				}
			}
		}
	}
}
result:
C:\develop\code>javac Array2Demo4.java

C:\develop\code>java Array2Demo4
[[I@24d46ca6
[I@4517d9a3
[I@372f7a8d
[I@2f92e0f4
1,2,3,4
5,6,7
9,10

ex improvement with method:
class Array2Demo4 {
	public static void main(String[] args) {
		int[][] arr = {{1,2,3,4}, {5,6,7,8}, {9,10,11,12}};
		System.out.println(arr);
		for (int i = 0; i < arr.length; ++i) {
			System.out.println(arr[i]);
		}
		
		printArray2(arr);
	}
	
	public static void printArray2(int[][] arr) {
		for(int i = 0; i < arr.length; ++i) {
			for (int j = 0; j < arr[i].length; ++j) {
				if (j == arr[i].length - 1) {
					System.out.println(arr[i][j]);
				} else {
					System.out.print(arr[i][j]+",");
				}
			}
		}
	}
}
