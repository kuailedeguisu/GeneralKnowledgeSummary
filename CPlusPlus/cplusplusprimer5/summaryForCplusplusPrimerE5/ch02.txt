1。unsigned int 和int类型进行运算后，会将int类型的负数变为unsigned int处理

2.未初始化的变量：
内置类型变量在函数体外，默认初始化为0；
内置类型变量，在函数体内，未初始化的变量不会默认初始化，如果使用了这个未初始化的变量会导致未定义的行为；而对于自定义的类的对象，其值由类决定
ps：应该总是初始化内置数据类型的变量，防止出现未定义的行为导致的调试困难

3.变量的声明和定义：
声明：指定类型和名字，可以声明多次
定义：指定类型和名字，同时分配存储空间，一个变量变量只能定义一次
多个文件中用到一个变量：可以在用到这个变量的所有文件中声明它，而在一个文件中定义这个变量

4.extern类型的变量：
将extern的变量表示声明它而不定义它


5.名字的作用域：
起于声明的位置，结束于声明语句所在的作用域末端

6.全局变量：
如果想用全局变量，在函数内部不宜再定义同名局部变量， 因为局部变量会覆盖全局变量的值，除非用：：作用域来访问该全局变量

7.基本数据类型： 
int char。。。。。

8.复合数据类型：
引用：对象的别名，包含左值引用和右值引用（c++11引入），声明时必须初始化,引用只能指向一个对象
指针:指向的对象可以变化，指针一般定义时必须初始化为某个对象，或者初始化为nullptr
int* p1, p2;//p1 is pointer, p2 is int,mislead
int* p1;
int* p2;//suggested only one declaration
int *p1, *p2;//not mislead

9.对于比较复杂的变量声明，原则是从右向左看，
int *&r = p;//r is a reference to a int type of pointer
10.const
const变量声明的时候必须初始化,并且以后不可以修改它
const int bufSize = 512;
