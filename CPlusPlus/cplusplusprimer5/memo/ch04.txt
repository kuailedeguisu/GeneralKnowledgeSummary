ch04 表达式
1.左值与右值
当一个对象被用作右值的时候，用的是对象的值或内容；
当一个对象被用作左值的时候，用的是对象在内存中的位置

需要右值的时候可以用左值代替，但是不能把右值当做左值使用

运算对象是否是左值或右值，返回结果是否是左值和右值

返回结果如何判断左值右值？
左值：赋值运算符，内置解引用运算符，下标运算符，迭代器解引用运算符，string和vector的下标运算符，内置类型和迭代器的递增递减运算符
右值：取地址返回右值，常量，算数表达式


溢出：越界等，程序编译和运行时无法检查出来，而是出现了未定义的行为
C++11规定商一定向0去整

短路求值：
逻辑与&&，只有当左侧运算对象为真时，才会对右侧运算对象求值
逻辑或||，只有当左侧运算对象为假时，才会对右侧运算对象求值


递增和递减运算符：
建议使用前置版本：++i,会对i增加1后返回增加后的值；后置版本i++,先对i增加1，然后返回原来的值
*iter++:例外，向将iter向前移动一个位置，然后计算iter的原来位置的值（++优先级高于*）

2.数组
int arr[10];
int* p = arr;//p pointed to the first element of arr

but decltype,sizeof,&(get pointer),typeif not.
